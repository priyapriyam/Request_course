{"name": "Function Arguments", "submissionType": null, "githubLink": "https://github.com/navgurukul/newton/tree/master/python/functions/functions-args.md", "solution": null, "reviewType": "peer", "id": 1119, "content": "```ngMeta\nname: Function Arguments\n```\n\n# What are function arguments?\n\nAbhi tak humne jo bhi functions code kare hain, unme kuch bahot simple print statements hain. Hum aise functions bhi likh sakte hain jo kuch data leke uss data ke saath kuch karte hain. Iss code ko chala ke dekho.\n\n```python\nnumbers_list = [1, 2, 3, 4, 5, 6, 7, 10, -2]\nprint max(numbers_list)\n```\n\nYahan humne `max` function ko `numbers_list` di aur usne usme se sabse badi value hume de di. Aise hi len function bhi ek list leke hume list mein items ki ginti deta hai.\n\nNeeche diye gaye code ko chala ke dekho aur ek baar socho ki kya ho raha hai.\n\n```python\ndef say_hello(name):\n    print \"Hello \", name\n    print \"Aap kaise ho?\"\nsay_hello(\"Aatif\")\n```\n\nYahan humne function ko ussi tareeke se define kiya hai jaise pichle examples mein kiya tha. Lekin dhyan se dekho toh `def say_hello` ke baad brackets mein humne `name` likha hai aur, aur neeche ek `name` variable ko print command ke saath use kar rahe hain. Yahan name ko parameter kehte hain jiski value hum function call karne ke time de sakte hain. Aakhri line mein function call karte vakt humne brackets ke andar `\"Aatif\"` likha hai. Function call karte vakt hum jo parameters ko value dete hain, unko arguments kehte hain.\n\nToh basically humne iss example mein yeh kiya aur seekha:\n\n* `say_hello` naam ka ek function define kiya jo ek `name` naam ka parameter leta hai aur uska use kar ke kuch print karta hai\n* fir humne function call kiya aur function call karne ke time ek argument diya jiski value \"Aatif\" thi\n* jab yeh function call hota hai toh jo humne string \"Aatif\" argument diya hai. Yahan uski value name parameter mein jaati hai aur. Jab yeh value\n* `name` parameter mein jaati hai, toh woh function ke andar same naam ke variable mein use kar sakte hain. Humne iss variable ka naam use kar ke print command likhi hai.\n\n**Note: Yeh thoda sa mushkil concept, agar bahot ache se samajh nahi aaya, toh ek aur baar padh ke aur dusre examples dekh ke zaroor samajh aa jayega ;-)**\n\n# Multiple Function Arguments\n\nAbhi tak humne ek function argument ke saath hi code likha hai. Ab hum thode aur function arguments ke saath code likhte hain.\n\n```python\ndef add_numbers(number1, number2):\n    print \"Main do numbers ko add karunga.\"\n    print number1 + number2\nadd_numbers(120, 50)\nnum_x = 134\nnum_y = 22\nadd_numbers(num_x, num_y)\n```\n\nYahan humne ek `add_numbers` naam ka function define kara hai. Lekin dekho ki bracket mein humne 2 parameter likhe hain. Ek sa jyada argument lene ke liye arguments ke baad comma laga dete hain Humne add_numbers(120, 50) likh ke function call karte samay do integer parameter diye hai. Yahan parameters ka kram / order important hai. Iss function call mein yeh hota \n\n* `120` ki value *pehle parameter* `number1` mein jaati hai jo ki function ke andar same naam ke variable number1 mein hai\n* `50` ki value *dusre parameter* `number2` mein jaati hai jo ki function ke andar same naam ke variable number2 mein hai\n* Baad mein humne do variable define kare hain, `num_x` and `num_y` aur fir add_numbers ko num1 aur num2 arguments deke call kiya hai. Yahan bhi:\n* `num_x` ki value `134` pehle parameter `number1` mein jaati hai aur `num_y` ki value `22` dusre parameter `number2` mein jaati hai.\n\nAur ache se samajhne ke liye ek aur example dekhte hain.\n\n```\ndef say_hello_language(name, language):\n    if language == \"hindi\":\n        print \"Namaste \", name\n        print \"Aap kaise ho?\"\n    elif language == \"punjabi\":\n        print \"Sat sri akaal \", name\n        print \"Tuhada ki haal hai?\"\n    else:\n        print \"Hello \", name\n        print \"How are you?\"\nsay_hello_language(\"Rishabh\", \"punjabi\")\nsay_hello_language(\"Armaan\", \"english\")\nsay_hello_language(\"Abhishek\", \"french\")\nsay_hello_language(\"Kavay\", \"hindi\")\n```\n\nYeh function do parameter leta hai, `name` aur `language` aur aise kaam karta hai:\n\n* Agar `language` `\"hindi\"` di hai, toh hindi mein kuch print karega\n* Agar `language` `\"punjabi\"` di hai, toh punjabi mein kuch print karega\n* Agar `\"hindi\"` aur `\"punjabi\"` ke ilava koi bhi language di hai toh english mein karega\n\nYeh karne ke liye humne ek function define kiya jo do arguments leta hai, `name` aur `language`. Hum jab `say_hello_language(\"Rishabh\", \"punjabi\")` call karte hain toh yeh hota hai:\n\n* Pehle parameter, `name` mein \"Rishabh\" string jata hai aur dusre parameter, `language` mein punjabi jaata hai.\n* Fir humara program if-elif-else ka use kar ke dekhta hai language ki value kya hai aur uske hisaab se sahi language mein print kar deta ha\n* Isi tareeke se upar likhi hui saari function calls mein yeh hi hota hai\n\n\n# Ek aur example\n\nChalane se pehle isko padh ke output ko sochne ki koshish karo. Fir chala ke dekho ki aapne sahi output sochi thi ya nahi.\n\n```python\ndef say_hello_people(name_x, name_y, name_z, name_a):\n    print \"Namaste \", name_x # hindi mein\n    print \"Alah hafiz \", name_y # urdu mein\n    print \"Bonjour \", name_z # french mein\n    print \"Hello \", name_a # english mein\nsay_hello_people(\"Imitiyaz\", \"Rishabh\", \"Rahul\", \"Vidya\")\nsay_hello_people(\"Steve\", \"Saswata\", \"Shakrundin\", \"Rajeev\")\n```\n\nIss function mein dekho ki yeh 4 argument leta hai, `name_x`, `name_y`, `name_z`, `name_a`. `def` waali pehli line mein humne 4 parameter ka naam comma (`,`) laga laga ke likhe hain. Function call karte samay jis kram / order mein humne parameters likhe hain def waali line mein, wahi kram / order mein arguments ki value parameters mein jaati hai.\n\n`say_hello_people(\"Imitiyaz\", \"Rishabh\", \"Rahul\", \"Vidya\")` mein parameters ki value iss hisaab se jaati hain:\n\n* `\"Imtiyaz\"` ki value pehle parameter `name_x` mein jaati hai\n* `\"Rishabh\"` ki value dusre parameter `name_y` mein jaati hai\n* `\"Rahul\"` ki value teesre parameter `name_z` mein jaati hai\n* `\"Vidya\"` ki value teesre parameter `name_a` mein jaati hai\n\n", "sequenceNum": 22002, "parentExerciseId": 1047, "slug": "python__functions/functions-args"}